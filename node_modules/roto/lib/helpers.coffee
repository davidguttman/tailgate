deepExtend = require 'deep-extend'

rtrim = (str, substr) ->
  i = str.length - 1
  
  while i >= 0
    search = str.substring i, str.length
    if substr is search
      str = str.substring 0, i
      break
    i--
  
  return str

jsonRegex = /(\{.+:?.+\}$)/

module.exports = 
  jsonRegex: jsonRegex
  nameRegex: /([\w|\s|\-]+)/

  # Called before each matching route
  # stores the current path in @path
  setPath: ->
    # console.log 'arguments', arguments
    @path = location.hash
    args = Array.prototype.reverse.apply arguments
    for arg in args
      @path = rtrim @path, arg
      @path = @path.replace /\/$/, ''
    
    # console.log '@path', @path
    $(window).trigger 'pathChange', @path if $
    return @path
    

  # Called before each matching route
  # stores the current params in @params
  # sets @params to {} if none are found
  setParams: ->
    @params = {}
    lastParam = _.last arguments
    if lastParam and jsonRegex.test lastParam
      try
        @params = JSON.parse lastParam
        # console.log '@params', @params

  # Ensures that required params are present
  # in @params, if not, they are set to defaults
  # and the url hash is updated
  # this does not trigger a navigation event
  ensureParams: (required) ->
    @updateParams (deepExtend required, @params), navigate: false

  # Updates the url hash with provided params
  # triggers a navigation event by default
  # pass {navigate: false} to avoid this
  updateParams: (newParams, opts={}) ->
    opts.navigate ?= true

    params = deepExtend @params, newParams
    path = @path
    href = "#{@path}/#{JSON.stringify params}"
    
    if opts.navigate is true
      window.location.href = href
    else
      hcCopy = window.onhashchange
      window.onhashchange = () ->
      window.location.href = href
      setTimeout ->
        window.onhashchange = hcCopy
      , 10
